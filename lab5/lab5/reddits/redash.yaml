---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redash-cm
  labels:
    app: redash
data:
  PYTHONUNBUFFERED: "0"
  REDASH_LOG_LEVEL: "INFO"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres:postgres@postgres/postgres"
  QUEUES: "queries,scheduled_queries,celery,schemas"
  WORKERS_COUNT: "4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redash-deploy
spec:
  selector:
    matchLabels:
      app: redash
  replicas: 1
  template:
    metadata:
      labels:
        app: redash
    spec:
      containers:
        - name: redash
          image: redash/redash
          args: ['server']
          ports:
            - name: redash
              containerPort: 5000
          envFrom:
            - configMapRef:
                name: redash-cm

        - name: redash-worker
          image: redash/redash
          args: ['worker']
          envFrom:
            - configMapRef:
                name: redash-cm

        - name: redis
          image: redis:3.0-alpine
          ports:
          - name: redis
            containerPort: 6379
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redash-job
spec:
  template:
    spec:
      containers:
      - name: redash-db-init
        image: redash/redash
        args: ['create_db']
        envFrom:
          - configMapRef:
              name: redash-cm
      restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  name: redash-svc
  labels:
    app: redash
spec:
  type: NodePort
  selector:
    app: redash
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30570
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redash
spec:
  selector:
    app: redash
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-cm
  labels:
    app: postgres
data:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_DB: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app: postgres
---
kind: PersistentVolume
apiVersion: v1
metadata:
 name: postgres-pv
 labels:
  type: local
spec:
 storageClassName: manual
 capacity:
  storage: 1Gi
 accessModes:
  - ReadWriteOnce
 hostPath:
  path: "/mnt/postgres_data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
 name: postgres-pvc
spec:
 storageClassName: manual
 accessModes:
  - ReadWriteOnce
 resources:
  requests:
   storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-sts
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
      - name: postgres-pv
        persistentVolumeClaim:
          claimName: postgres-pvc
      containers:
      - name: postgres
        image: postgres:9.5-alpine
        envFrom:
          - configMapRef:
              name: postgres-cm
        ports:
        - containerPort: 5432
          name: postgresdb
        volumeMounts:
        - name: postgres-pv
          mountPath: /var/lib/postgresql/data
